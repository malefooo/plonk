[package]
name = "dusk-plonk"
version = "0.8.2"
authors = ["Kevaundray Wedderburn <kevtheappdev@gmail.com>",
           "Luke Pearson <luke@dusk.network>", 
           "CPerezz <carlos@dusk.network>"] 
readme = "README.md"
repository = "https://github.com/dusk-network/plonk"
keywords = ["cryptography", "plonk", "zk-snarks", "zero-knowledge", "crypto"]
categories =["algorithms", "cryptography", "science"]
description = "A pure-Rust implementation of the PLONK ZK-Proof algorithm"
exclude = [
    "**/.gitignore",
    ".gitignore",
    "Cargo.lock",
    "**/examples",
    "benchmarks/",
    ".github/"
]
license = "MPL-2.0"
edition = "2018"

[dependencies]
merlin = {version = "3.0", default-features = false}
rand_core = {version="0.6", default-features=false}
dusk-bytes = "0.1"
dusk-bls12_381 = {git = "https://github.com/malefooo/bls12_381", branch = "v080", default-features = false, features = ["groups", "pairings", "endo"]}
dusk-jubjub = {git = "https://github.com/malefooo/jubjub",branch = "v0100", default-features = false}
itertools = {git = "https://github.com/rust-itertools/itertools", tag = "v0.9.0", default-features = false}
hashbrown = {git = "https://github.com/rust-lang/hashbrown.git",tag = "v0.9.0", default-features=false, features = ["ahash"]}
rayon = {git = "https://github.com/rayon-rs/rayon", tag = "v1.3.0", optional = true}
cfg-if = "1.0"
# Dusk related deps for WASMI serde
canonical = {git = "https://github.com/dusk-network/canonical.git", tag = "canonical-0.6.0", optional = true}
canonical_derive = {git = "https://github.com/dusk-network/canonical.git",tag = "canonical-0.6.0", optional = true}
anyhow = "1.0.32"
bigint = "4.4.3"
thiserror = "1.0"
[dev-dependencies]
tempdir = "0.3"

[features]
default = ["std"]
std = [
    "rand_core/std",
    "dusk-bls12_381/default",  # Includes `parallel`
    "dusk-jubjub/default",
    "itertools/default",
    "hashbrown/default",
    "alloc",
    "rayon"
]
alloc = ["dusk-bls12_381/alloc"]
trace = []
trace-print = ["trace"]
canon = ["dusk-bls12_381/canon", "dusk-jubjub/canon", "canonical", "canonical_derive"]
